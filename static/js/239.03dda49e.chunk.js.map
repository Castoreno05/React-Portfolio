{"version":3,"file":"static/js/239.03dda49e.chunk.js","mappings":"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","sources":["components/ContactMe.js","components/Intro.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport emailjs from \"@emailjs/browser\";\n\nexport const ContactMe = ({ setOpenModal }) => {\n  const handleModal = (e) => {\n    e.preventDefault();\n    setOpenModal(false);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const name = document.getElementById(\"name\").value;\n    const email = document.getElementById(\"email\").value;\n    const description = document.getElementById(\"description\").value;\n    const emailPayload = {\n      to_name: name,\n      from_email: email,\n      message: description,\n    };\n\n    emailjs\n      .send(\n        \"service_jw4ta39\",\n        \"template_p2hook7\",\n        emailPayload,\n        \"0f5Bq6CLKVad2P7ep\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          alert(\"Email has been sent\");\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n    setOpenModal(false);\n  };\n\n  return (\n    <Container>\n      <div className=\"header\">\n        <h1>Contact Me</h1>\n        <AiFillCloseCircle onClick={handleModal} />\n      </div>\n      <div className=\"body\">\n        <div className=\"info\">\n          <label htmlFor=\"name\">Your Name</label>\n          <input type=\"text\" id=\"name\" />\n        </div>\n        <div className=\"info\">\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"text\" id=\"email\" />\n        </div>\n        <div className=\"info\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea id=\"description\" />\n        </div>\n      </div>\n      <div className=\"footer\">\n        <div className=\"buttonDiv\">\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n        <div className=\"githubDiv\">\n          <p>\n            Github Username:{\" \"}\n            <a href=\"https://github.com/Castoreno05\" target=\"_blank\">\n              Castoreno05\n            </a>\n          </p>\n        </div>\n      </div>\n    </Container>\n  );\n};\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  //   height: 300px;\n  position: relative;\n  background-color: whitesmoke;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: top 0.2s ease-out, opacity 0.2s ease-out;\n  border-radius: 8px;\n  .header {\n    position: relative;\n    padding: 0.5rem;\n    h1 {\n      text-align: center;\n    }\n    svg {\n      position: absolute;\n      right: 0;\n      top: 10px;\n      left: 91%;\n      font-size: 22px;\n      cursor: pointer;\n    }\n  }\n  .body {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    width: 300px;\n    margin: 0 auto;\n    .info {\n      display: flex;\n      flex-direction: column;\n      gap: 3px;\n      label {\n        font-size: 18px;\n      }\n      input {\n        padding: 0.25rem;\n        border: none;\n        border-radius: 5px;\n        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\n      }\n      textarea {\n        border-radius: 5px;\n        border: none;\n        outline: none;\n        height: 100px;\n        resize: none;\n        padding: 0.25rem;\n        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\n      }\n    }\n  }\n  .footer {\n    width: 300px;\n    margin: 0 auto;\n    .buttonDiv {\n      padding: 1rem 0;\n      button {\n        width: 100%;\n        padding: 0.75rem;\n        background-color: green;\n        border: none;\n        color: white;\n        border-radius: 5px;\n        cursor: pointer;\n      }\n    }\n    .githubDiv {\n      padding-bottom: 1rem;\n      p {\n        text-align: center;\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Me from \"../Videos/MatthewC.png\";\nimport { AiFillMail, AiFillPhone, AiOutlineArrowRight } from \"react-icons/ai\";\nimport { BsFillPinMapFill } from \"react-icons/bs\";\nimport { ContactMe } from \"./ContactMe\";\n\nfunction Intro() {\n  const [openModal, setOpenModal] = useState(false);\n  const handleContact = (e) => {\n    e.preventDefault();\n    setOpenModal(!openModal);\n  };\n\n  return (\n    <>\n      <Container>\n        <div className=\"leftContainer\">\n          <p>Full Stack Developer</p>\n          <div className=\"contactInfo\">\n            <div className=\"email\">\n              <AiFillMail />\n              <span>matthew.castoreno@yahoo.com</span>\n            </div>\n            <div className=\"phone\">\n              <AiFillPhone />\n              <span>(832) 433-4371</span>\n            </div>\n            <div className=\"map\">\n              <BsFillPinMapFill />\n              <span>Houston, Texas</span>\n            </div>\n          </div>\n          <div className=\"buttonDiv\">\n            <button>Download CV</button>\n            <button onClick={handleContact}>Contact Me</button>\n          </div>\n        </div>\n        <div className=\"rightContainer\">\n          <img src={Me} alt=\"Matthew Castoreno\" />\n          <h1>Matthew Castoreno</h1>\n          <p>\n            An experienced and dedicated professional with a proven ability to\n            effectively communicate and display empathy in all interactions.\n            These skills were honed through my rewarding career as a Process\n            Operator in the Oil and Gas Industry. Seeking a full stack developer\n            role in a collaborative and supportive work environment, where I can\n            utilize my skills and knowledge to contribute to the success of the\n            team.\n          </p>\n        </div>\n      </Container>\n      <AboutContainer>\n        <button>\n          Projects <AiOutlineArrowRight />\n        </button>\n      </AboutContainer>\n      {openModal && (\n        <Modal>\n          <ContactMe setOpenModal={setOpenModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  padding: 2rem;\n  padding-top: 4rem;\n  background-color: white;\n  .leftContainer {\n    margin-top: 4rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 50%;\n    gap: 1rem;\n    p {\n      font-weight: bold;\n      font-size: 50px;\n      text-align: center;\n      color: black;\n      margin: 0rem;\n    }\n    .contactInfo {\n      display: flex;\n      align-items: center;\n      flex-direction: column;\n      gap: 1rem;\n      .email,\n      .phone,\n      .map {\n        display: flex;\n        align-items: center;\n        gap: 5px;\n        svg {\n          margin: 0;\n          font-size: 18px;\n        }\n        span {\n          font-size: 20px;\n        }\n      }\n    }\n    .buttonDiv {\n      display: flex;\n      justify-content: center;\n      padding: 0.5rem;\n      gap: 8px;\n      button {\n        background: none;\n        padding: 0.5rem;\n        font-size: 16px;\n        cursor: pointer;\n        width: 150px;\n        border-radius: 5px;\n      }\n      button:hover {\n        background-color: black;\n        color: white;\n      }\n    }\n  }\n  .rightContainer {\n    margin-top: 4rem;\n    display: flex;\n    flex-direction: column;\n    width: 50%;\n    img {\n      margin: auto;\n      border-radius: 10%;\n      box-shadow: -1px 4px 35px 2px rgba(0, 0, 0, 0.59);\n      height: 300px;\n      width: 300px;\n    }\n    h1 {\n      margin: 0;\n      color: black;\n      text-align: center;\n      font-size: 50px;\n      font-family: \"Pacifico\", cursive;\n    }\n    p {\n      font-size: 18px;\n      line-height: 2;\n    }\n  }\n`;\nconst AboutContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n  margin-bottom: 3rem;\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    background: none;\n    padding: 0.5rem;\n    font-size: 16px;\n    cursor: pointer;\n    width: 150px;\n    border-radius: 5px;\n  }\n  button:hover {\n    background-color: black;\n    color: white;\n  }\n`;\nconst Modal = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  height: 101vh;\n  width: 100%;\n  transform: translate(-50%, -50%);\n  transition: 0.2s;\n  background-color: rgba(0, 0, 0, 0.75);\n  z-index: 10000;\n`;\n\nexport default Intro;\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.10.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.10.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["ContactMe","setOpenModal","Container","className","onClick","e","preventDefault","htmlFor","type","id","emailPayload","to_name","document","getElementById","value","from_email","message","emailjs","then","result","console","log","text","alert","error","href","target","styled","AboutContainer","Modal","useState","openModal","src","Me","alt","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","querySelector","nodeName","findHTMLForm","formData","FormData","append"],"sourceRoot":""}