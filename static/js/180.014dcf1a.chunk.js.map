{"version":3,"file":"static/js/180.014dcf1a.chunk.js","mappings":"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","sources":["components/MobileContactMe.js","components/MobileIntro.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport emailjs from \"@emailjs/browser\";\n\nexport const MobileContactMe = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const emailPayload = {\n      to_name: name,\n      from_email: email,\n      message: description,\n    };\n\n    if (name === \"\" || email === \"\" || description === \"\") {\n      alert(\"All fields are required\");\n    } else {\n      emailjs\n        .send(\n          \"service_jw4ta39\",\n          \"template_p2hook7\",\n          emailPayload,\n          \"0f5Bq6CLKVad2P7ep\"\n        )\n        .then(\n          (result) => {\n            console.log(result.text);\n            alert(\"Email has been sent\");\n            setName(\"\");\n            setEmail(\"\");\n            setDescription(\"\");\n          },\n          (error) => {\n            console.log(error.text);\n          }\n        );\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"body\">\n        <div className=\"info\">\n          <label htmlFor=\"name\">Your Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div className=\"info\">\n          <label htmlFor=\"email\">Your Email</label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"info\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"footer\">\n        <div className=\"buttonDiv\">\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      </div>\n    </Container>\n  );\n};\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  .body {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    padding: 1rem;\n    padding-bottom: 0;\n    .info {\n      display: flex;\n      flex-direction: column;\n      gap: 3px;\n      label {\n        font-size: 16px;\n      }\n      input {\n        padding: 0.25rem;\n        border: none;\n        border-radius: 5px;\n        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\n      }\n      textarea {\n        border-radius: 5px;\n        border: none;\n        outline: none;\n        height: 100px;\n        resize: none;\n        padding: 0.25rem;\n        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\n      }\n    }\n  }\n  .footer {\n    padding: 1rem;\n    padding-top: 0;\n    .buttonDiv {\n      padding: 1rem 0;\n      button {\n        width: 100%;\n        padding: 0.5rem;\n        background: none;\n        border-radius: 5px;\n        cursor: pointer;\n      }\n      button:hover {\n        background-color: black;\n        color: white;\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Me from \"../Videos/MatthewC.png\";\nimport { AiFillMail, AiFillPhone } from \"react-icons/ai\";\nimport { BsFillPinMapFill } from \"react-icons/bs\";\nimport { MobileContactMe } from \"./MobileContactMe\";\n\nfunction MobileIntro() {\n\tconst [showFullText, setShowFullText] = useState(false);\n\tconst introText =\n\t\t\"An experienced and dedicated professional with a proven ability to effectively communicate and display empathy in all interactions. These skills were honed through my rewarding career as a Process Operator in the Oil and Gas Industry. Seeking a full stack developer role in a collaborative and supportive work environment, where I can utilize my skills and knowledge to contribute to the success of the team. \";\n\n\tconst shortenText = (text, maxLength) => {\n\t\tif (text.length <= maxLength) {\n\t\t\treturn text;\n\t\t}\n\t\treturn text.substr(0, text.lastIndexOf(\" \", maxLength)) + \"... \";\n\t};\n\tconst handleToggleText = () => {\n\t\tsetShowFullText(!showFullText);\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"imageDiv\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={Me}\n\t\t\t\t\t\talt=\"Matthew Castoreno\"\n\t\t\t\t\t/>\n\t\t\t\t\t<h1>Matthew Castoreno</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"info\">\n\t\t\t\t\t<div className=\"email\">\n\t\t\t\t\t\t<AiFillMail />\n\t\t\t\t\t\t<span>matthew.castoreno@yahoo.com</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"phone\">\n\t\t\t\t\t\t<AiFillPhone />\n\t\t\t\t\t\t<span>(832) 433-4371</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"map\">\n\t\t\t\t\t\t<BsFillPinMapFill />\n\t\t\t\t\t\t<span>Houston, Texas</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"buttonDiv\">\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"MatthewCastoreno.pdf\"\n\t\t\t\t\t\t\tdownload=\"MatthewCastoreno.pdf\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload CV\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"intro\">\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<h2>Full Stack Developer</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"description\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{showFullText ? introText : shortenText(introText, 180)}\n\t\t\t\t\t\t{showFullText ? (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\tonClick={handleToggleText}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tshow less\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\tonClick={handleToggleText}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tshow more\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"contact\">\n\t\t\t\t<div className=\"contactTitle\">\n\t\t\t\t\t<h2>Contact Me</h2>\n\t\t\t\t</div>\n\t\t\t\t<MobileContactMe />\n\t\t\t</div>\n\t\t\t{/* <div className=\"serviceContainer\">\n        <div className=\"serviceTitle\">\n          <h2>Services</h2>\n        </div>\n        <div className=\"services\">\n          <div className=\"service\">\n            <h3>Front-End Development</h3>\n          </div>\n          <div className=\"service\">\n            <h3>Back-End Development</h3>\n          </div>\n          <div className=\"service\"></div>\n          <div className=\"service\"></div>\n        </div>\n      </div> */}\n\t\t</Container>\n\t);\n}\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1rem;\n\tpadding: 0.25rem;\n\tpadding-top: 2rem;\n\t.header {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tgap: 3px;\n\t\t.imageDiv {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\talign-items: center;\n\t\t\tgap: 3px;\n\t\t\timg {\n\t\t\t\theight: 125px;\n\t\t\t\twidth: 125px;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tbox-shadow: 0px 0px 5px 4px rgba(0, 0, 0, 0.42);\n\t\t\t}\n\t\t\th1 {\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tfont-size: 18px;\n\t\t\t}\n\t\t}\n\t\t.info {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\tflex-direction: column;\n\t\t\tgap: 3px;\n\t\t\t.email,\n\t\t\t.phone,\n\t\t\t.map {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tgap: 5px;\n\t\t\t\tsvg {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t}\n\t\t\t\tspan {\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.buttonDiv {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\tpadding-top: 0.25rem;\n\t\t\t\tgap: 5px;\n\t\t\t\ta {\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\tborder: solid black 1.5px;\n\t\t\t\t\tcolor: inherit;\n\t\t\t\t\tbackground: none;\n\t\t\t\t\tpadding: 0.25rem;\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\tborder-radius: 5px;\n\t\t\t\t}\n\t\t\t\ta:hover {\n\t\t\t\t\tbackground-color: black;\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.intro {\n\t\t.title {\n\t\t\th2 {\n\t\t\t\tfont-size: 16px;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t}\n\t\t.description {\n\t\t\tp {\n\t\t\t\twhite-space: normal;\n\t\t\t}\n\t\t}\n\t}\n\t.contact {\n\t\t.contactTitle {\n\t\t\th2 {\n\t\t\t\tfont-size: 16px;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t}\n\t}\n\t//   .serviceContainer {\n\t//     .serviceTitle {\n\t//       h2 {\n\t//         font-size: 16px;\n\t//         text-align: center;\n\t//       }\n\t//     }\n\t//     .services {\n\t//       display: grid;\n\t//       grid-template-columns: repeat(2, 1fr);\n\t//       .service {\n\t//         h3 {\n\t//           font-size: 14px;\n\t//           text-align: center;\n\t//         }\n\t//       }\n\t//     }\n\t//   }\n`;\n\nexport default MobileIntro;\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.10.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.10.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["MobileContactMe","useState","name","setName","email","setEmail","description","setDescription","Container","className","htmlFor","type","id","value","onChange","e","target","onClick","preventDefault","emailPayload","to_name","from_email","message","alert","emailjs","then","result","console","log","text","error","styled","maxLength","showFullText","setShowFullText","introText","handleToggleText","src","Me","alt","href","download","length","substr","lastIndexOf","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append"],"sourceRoot":""}